/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package registrationandlogin;

import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author RC_Student_lab
 */
public class Options extends javax.swing.JFrame {
   CheckMessage checker = new CheckMessage();
    /**
     * Creates new form ChatBox
     */
    public Options() {
        initComponents();
       //calling method to test data 
      

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ShowMessages = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("QuickChat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(604, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 800, 60);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Welcome to Quickchat");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("1.");

        jButton1.setBackground(new java.awt.Color(0, 0, 51));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Send Messages");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("2.");

        ShowMessages.setBackground(new java.awt.Color(0, 0, 51));
        ShowMessages.setForeground(new java.awt.Color(255, 255, 255));
        ShowMessages.setText("Show Recently sent message");
        ShowMessages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowMessagesActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Quit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("3.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ShowMessages, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))))
                .addContainerGap(525, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ShowMessages)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel4))
                .addContainerGap(286, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 60, 800, 440);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShowMessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowMessagesActionPerformed
      
        
        // Display a dialog box prompting the user to choose a report option
        String reportOption = JOptionPane.showInputDialog(null,
              "Message Reports:\n"
               + "a. Display sender and recipient of all sent messages\n"  // Option a: Show userId and recipient
               + "b. Display the longest sent message\n"                   // Option b: Find message with most characters
               + "c. Search for a message by ID\n"                         // Option c: Find message(s) by sender ID
               + "d. Search messages by recipient\n"                       // Option d: Find messages sent to a recipient
               + "e. Delete a message by hash\n"                           // Option e: Remove message by its hash
               + "f. Display full details of all sent messages\n\n"        // Option f: Show all data for all messages
               + "Enter your option (a-f):");
        
         // If user cancels
         if (reportOption == null) {
             JOptionPane.showMessageDialog(null, "Cancelled.");
             return;
        }
    
         
        if (reportOption != null) {
             // Create a CheckMessage instance to handle reporting operations
             CheckMessage checker = new CheckMessage();

            // Convert the input to lowercase and evaluate the selected report option
          switch (reportOption.toLowerCase()) {

            case "a":
            // Option A: Display sender and recipient of all messages
                 String messages = checker.printMethod();
                 JOptionPane.showMessageDialog(null, messages);
                 break;

            case "b":
                 // Option B: Find and display the longest message
                 String longest = checker.getLongestMessage();
                 JOptionPane.showMessageDialog(null, longest);
                 break;

            case "c":
                 // Option C: Prompt for an ID and search messages by that ID
                 String id = JOptionPane.showInputDialog("Enter message ID:");
                 JOptionPane.showMessageDialog(null, CheckMessage.searchById(id));
                 break;

            case "d":
                 // Option D: Search messages by recipient number
                 checker.findMessageByRecipient();
                 break;

            case "e":
                 // Option E: Delete a message by its hash value
                 checker.deleteMessageByHash();
                 break;

             case "f":
                  // Option F: Show full details of all sent messages
                  checker.displayFullMessageDetails();
                  break;

            default:
                // Handle invalid input
                JOptionPane.showMessageDialog(this, "Invalid Input, please try again.");
    }
}

    }//GEN-LAST:event_ShowMessagesActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JOptionPane.showMessageDialog(this,"Goodbye");
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         //Asking the user to enter the number of message they want to send.
        String limitStr = JOptionPane.showInputDialog(null, "Please enter message limit:");
        //when the user decides to cancel the message limit.
        if (limitStr == null){
            JOptionPane.showMessageDialog(null,"Cancelled.");
            return;
        }
        //Checking if the user entered a valid message limit.
        boolean validInput = true;
        int messageLimit = 0;

      
        
        if ( !limitStr.matches("\\d+")) {
    JOptionPane.showMessageDialog(null, "Message limit must be a number.");
    return;
      }
    messageLimit = Integer.parseInt(limitStr);

    if (messageLimit <= 0) {
        JOptionPane.showMessageDialog(null, "Please enter a positive message limit.");
         return ;
    }
     
    //Asking the user to ENTER 10-digit user ID.
    CheckMessage checker = new CheckMessage();
    String userId = JOptionPane.showInputDialog(this,"Please enter your 10-digit User ID:");
    //When the user decides to cancel entering user ID.
    if (userId == null){
        JOptionPane.showMessageDialog(this, "Cancelled.");
        return;
    }
    //Checking if the user enter a valid user ID.
    if(!checker.isValidUserId(userId)){
        JOptionPane.showMessageDialog(this,"Invalid User ID", "ERROR", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    
    String cellNumber = JOptionPane.showInputDialog(this,"Please enter recipient your phone number.");
      if (cellNumber == null){
        JOptionPane.showMessageDialog(this, "Cancelled.");
        return;
    }
    while(checker.checkRecipientCell(cellNumber) == 0){
        JOptionPane.showMessageDialog(this, "Invalid Input. Must include international code");
        cellNumber = JOptionPane.showInputDialog(this,"Please re-enter your recipient phone number.", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
    
   


//Ask repeatedly for valid phone number


    
      if(validInput){
    ChatArea chat = new ChatArea(userId, messageLimit, cellNumber);
     chat.setVisible(true);
     this.dispose(); 
      }

    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Options().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ShowMessages;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
